admin:
  access_log_path: /dev/stdout
  profile_path: /tmp/envoy.prof
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
    listeners:
    - name: udp_listener
      reuse_port: true
      address:
            socket_address:
                protocol: UDP
                address: 0.0.0.0
                port_value: 9000
      listener_filters:
        name: envoy.filters.udp_listener.udp_proxy
        typed_config:
            '@type': type.googleapis.com/envoy.config.filter.udp.udp_proxy.v2alpha.UdpProxyConfig
            stat_prefix: service
            cluster: service_udp  
    - name: tcp_listener
      address:
            socket_address:
                protocol: TCP
                address: 0.0.0.0
                port_value: 9001
      filter_chains:
      - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                    "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
                    stat_prefix: service
                    cluster: service_tcp                      
    clusters:
    - name: xds_cluster
      connect_timeout: 0.25s
      type: STATIC
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      upstream_connection_options:
        # configure a TCP keep-alive to detect and reconnect to the admin
        # server in the event of a TCP socket half open connection
        tcp_keepalive: {}
      load_assignment:
        cluster_name: xds_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: envoy_control_plane
                      port_value: 18000
